name: Code Quality Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # Run on schedule to regularly monitor code quality
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Mondays
  # Allow manual triggering
  workflow_dispatch:

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for quality reporting
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Project configuration in sonar-project.properties file
          args: >
            -Dsonar.projectKey=bolt_v2
            -Dsonar.organization=gym-class-scheduler
            -Dsonar.python.coverage.reportPaths=scheduler-backend/coverage.xml

  dependency-audit:
    name: Dependency Vulnerability Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install safety
        run: |
          python -m pip install --upgrade pip
          pip install safety
      
      - name: Check for vulnerabilities
        run: |
          cd scheduler-backend
          safety check -r requirements.txt

  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install analysis tools
        run: |
          python -m pip install --upgrade pip
          pip install radon xenon
      
      - name: Analyze code complexity
        run: |
          cd scheduler-backend
          echo "Cyclomatic Complexity Report:" > complexity-report.txt
          radon cc app -a -s >> complexity-report.txt
          echo "\nMaintainability Index:" >> complexity-report.txt
          radon mi app >> complexity-report.txt
          
          # Check if any module exceeds complexity threshold
          xenon --max-absolute B --max-modules B --max-average B app || echo "::warning::Code complexity threshold exceeded"
      
      - name: Upload complexity report
        uses: actions/upload-artifact@v3
        with:
          name: complexity-report
          path: scheduler-backend/complexity-report.txt

  duplicate-code:
    name: Duplicate Code Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install analysis tools
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      
      - name: Check for duplicate code
        run: |
          cd scheduler-backend
          pylint --disable=all --enable=duplicate-code app > duplicate-code-report.txt || true
      
      - name: Upload duplicate code report
        uses: actions/upload-artifact@v3
        with:
          name: duplicate-code-report
          path: scheduler-backend/duplicate-code-report.txt

  generate-quality-report:
    name: Generate Quality Report
    runs-on: ubuntu-latest
    needs: [sonarcloud, dependency-audit, complexity-analysis, duplicate-code]
    if: always()
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        
      - name: Combine reports
        run: |
          echo "# Code Quality Report" > quality-report.md
          echo "## Generated on $(date)" >> quality-report.md
          
          echo "\n## Complexity Analysis" >> quality-report.md
          if [ -f "complexity-report/complexity-report.txt" ]; then
            echo "\`\`\`" >> quality-report.md
            cat complexity-report/complexity-report.txt >> quality-report.md
            echo "\`\`\`" >> quality-report.md
          else
            echo "Complexity report not available" >> quality-report.md
          fi
          
          echo "\n## Duplicate Code Analysis" >> quality-report.md
          if [ -f "duplicate-code-report/duplicate-code-report.txt" ]; then
            echo "\`\`\`" >> quality-report.md
            cat duplicate-code-report/duplicate-code-report.txt >> quality-report.md
            echo "\`\`\`" >> quality-report.md
          else
            echo "Duplicate code report not available" >> quality-report.md
          fi
          
      - name: Upload quality report
        uses: actions/upload-artifact@v3
        with:
          name: quality-report
          path: quality-report.md
