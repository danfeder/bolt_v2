name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'scheduler-backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'scheduler-backend/**'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install black flake8 isort mypy
      
      - name: Check code formatting with Black
        run: |
          cd scheduler-backend
          black --check app tests
          
      - name: Check import sorting with isort
        run: |
          cd scheduler-backend
          isort --check app tests
          
      - name: Lint with flake8
        run: |
          cd scheduler-backend
          flake8 app tests
          
      - name: Type check with mypy
        run: |
          cd scheduler-backend
          mypy app

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-xdist
      
      - name: Run unit tests with parallel execution and coverage
        run: |
          cd scheduler-backend
          python -m pytest tests/unit -xvs --cov=app --cov-report=xml --cov-report=term -n auto
          
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./scheduler-backend/coverage.xml
          fail_ci_if_error: false
          
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: scheduler-backend/coverage.xml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run integration tests
        run: |
          cd scheduler-backend
          python -m pytest tests/integration -xvs

  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run API tests
        run: |
          cd scheduler-backend
          python -m pytest tests/api -xvs

  functional-tests:
    name: Functional Tests
    runs-on: ubuntu-latest
    needs: [integration-tests, api-tests]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install pytest
      
      - name: Run functional tests
        run: |
          cd scheduler-backend
          python -m pytest tests/functional -xvs

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [functional-tests]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd scheduler-backend
          pip install -r requirements.txt
          pip install build wheel
      
      - name: Build package
        run: |
          cd scheduler-backend
          python -m build
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: scheduler-backend/dist/

  test-report:
    name: Generate Test Reports
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, api-tests, functional-tests]
    if: always()
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        
      - name: Generate consolidated test report
        run: |
          echo "# Test Results Summary" > test-report.md
          echo "## Coverage Report" >> test-report.md
          if [ -f "code-coverage-report/coverage.xml" ]; then
            python -c "import xml.etree.ElementTree as ET; tree = ET.parse('code-coverage-report/coverage.xml'); root = tree.getroot(); print(f\"Overall coverage: {root.attrib['line-rate']:.2%}\")" >> test-report.md
          else
            echo "Coverage report not available" >> test-report.md
          fi
          
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.md
